name: react frontend auto deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:  # 수동 실행도 가능하게 추가

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Git 리포지토리 가져오기
        uses: actions/checkout@v4
      
      - name: Node.js 설치
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: 의존성 설치 (npm install)
        run: npm install
        working-directory: ./movie-app
      
      - name: 실행파일 빌드 (npm run build)
        run: npm run build
        working-directory: ./movie-app

      - name: Docker 로그인
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Docker 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USER }}/react-test:mixed ./movie-app

      - name: Docker 이미지 푸시
        run: docker push ${{ secrets.DOCKER_USER }}/react-test:mixed

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: EC2에 접속해 이미지 pull 및 컨테이너 실행
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USER }}/react-test:mixed
            docker stop react || true
            docker rm react || true
            docker rmi ${{ secrets.DOCKER_USER }}/react-test:mixed || true
            docker run -d --name react-test -p 80:80 ${{ secrets.DOCKER_USER }}/react-test:mixed
